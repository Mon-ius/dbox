name: windows

permissions:
  contents: write

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - "master"
    paths:
      - ".github/workflows/build-windows.yml"
  workflow_dispatch:
  workflow_run:
    workflows: ["listen"]
    types:
      - completed

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'
          check-latest: true

      - name: Set up MinGW for cross-compilation
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64

      - name: Create output directories
        run: |
          mkdir -p windows\lib\amd64
          mkdir -p windows\lib\arm64
          mkdir -p windows\lib\386
        shell: cmd

      - name: Navigate to source directory
        run: |
          if exist src (
            cd src
            echo "Changed working directory to %CD%"
            echo "WORKING_DIR=%CD%" >> $env:GITHUB_ENV
          ) else (
            echo "src directory not found, staying in root directory"
            echo "WORKING_DIR=%CD%" >> $env:GITHUB_ENV
          )
        shell: cmd

      - name: Build for Windows AMD64
        run: |
          echo "Building for Windows AMD64..."
          cd %WORKING_DIR%
          set GOOS=windows
          set GOARCH=amd64
          set CGO_ENABLED=1
          go build -buildmode=c-shared ^
            -trimpath ^
            -ldflags="-s -w -buildid=" ^
            -tags="with_debug" ^
            -o "$env:GITHUB_WORKSPACE\windows\lib\amd64\dbox.dll" ^
            .\cmd\dbox
        shell: cmd

      - name: Build for Windows ARM64
        run: |
          echo "Building for Windows ARM64..."
          cd %WORKING_DIR%
          set GOOS=windows
          set GOARCH=arm64
          set CGO_ENABLED=1
          go build -buildmode=c-shared ^
            -trimpath ^
            -ldflags="-s -w -buildid=" ^
            -tags="with_debug" ^
            -o "$env:GITHUB_WORKSPACE\windows\lib\arm64\dbox.dll" ^
            .\cmd\dbox
        shell: cmd

      - name: Build for Windows 386
        run: |
          echo "Building for Windows 386..."
          cd %WORKING_DIR%
          set GOOS=windows
          set GOARCH=386
          set CGO_ENABLED=1
          go build -buildmode=c-shared ^
            -trimpath ^
            -ldflags="-s -w -buildid=" ^
            -tags="with_debug" ^
            -o "$env:GITHUB_WORKSPACE\windows\lib\386\dbox.dll" ^
            .\cmd\dbox
        shell: cmd

      - name: Verify the libraries
        run: |
          cd $env:GITHUB_WORKSPACE
          
          echo "Verifying AMD64 library:"
          if (Test-Path "windows\lib\amd64\dbox.dll") {
            echo "AMD64 library exists"
            Get-Item windows\lib\amd64\dbox.dll | Format-List
          } else {
            echo "ERROR: AMD64 library not found"
            exit 1
          }
          
          echo "Verifying ARM64 library:"
          if (Test-Path "windows\lib\arm64\dbox.dll") {
            echo "ARM64 library exists"
            Get-Item windows\lib\arm64\dbox.dll | Format-List
          } else {
            echo "ERROR: ARM64 library not found"
            exit 1
          }
          
          echo "Verifying 386 library:"
          if (Test-Path "windows\lib\386\dbox.dll") {
            echo "386 library exists"
            Get-Item windows\lib\386\dbox.dll | Format-List
          } else {
            echo "ERROR: 386 library not found"
            exit 1
          }
        shell: pwsh

      - name: Commit and push changes
        run: |
          cd $env:GITHUB_WORKSPACE
          
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          git add windows\lib
          
          git diff --staged --quiet
          if ($LASTEXITCODE -eq 0) {
            echo "No changes detected in Windows libraries. Skipping commit."
          } else {
            echo "Changes detected in Windows libraries. Creating commit..."
            git commit -m "Build Windows libraries ($(Get-Date -Format 'yyyy-MM-dd HH:mm:ss UTC' -AsUTC))"
            git push
            echo "Successfully pushed changes to repository."
          }
        shell: pwsh